{"ast":null,"code":"import _slicedToArray from \"/home/je12emy/Documents/food-recipe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/je12emy/Documents/food-recipe/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { log } from 'util';\nimport Recipe from './Components/Recipe';\n\nconst App = () => {\n  //? const variables for keys and api endpoint\n  const APP_ID = 'f3dd72ba';\n  const APP_KEY = '6d25956fcfb5c8062541bfba4e1a6e23';\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState('chicken'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1]; //* Use effect is a function which is run when the page is refreshed\n\n\n  useEffect(() => {\n    getRecipes(); //* Invoke the function for fethching our data\n  }, []); //? Run this function when the page is loaded for the first time only\n\n  const getRecipes = async () => {\n    //* Await the get request\n    const response = await fetch(\"https://api.edamam.com/search?q=\".concat(chicken, \"&app_id=\").concat(APP_ID, \"&app_key=\").concat(APP_KEY)); //* Wait for the data to arraive and parse it\n\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    //* Events have a sender which references the element where the event occured, we can modify this sender object\n    //? Update our search variable by asigning it the value we are atempting to type in  \n    setSearch(e.target.value); //? If we log our search we will see the string as we type it\n\n    console.log(search);\n  };\n\n  return (//* Basic JSX which is exported into App.js\n    React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"search-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      value: search,\n      onChange: updateSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"search-buton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Submit\")), recipes.map((recipe, index) => //? The recipe item, has a ricipe object which we want to access to\n    React.createElement(Recipe, {\n      key: index,\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories,\n      image: recipe.recipe.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/home/je12emy/Documents/food-recipe/src/App.js"],"names":["React","useEffect","useState","log","Recipe","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","chicken","data","json","hits","updateSearch","e","target","value","console","map","recipe","index","label","calories","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAI;AACd;AACA,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;;AAHc,oBAIgBL,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAIPM,OAJO;AAAA,QAIEC,UAJF;;AAAA,qBAKcP,QAAQ,CAAC,EAAD,CALtB;AAAA;AAAA,QAKPQ,MALO;AAAA,QAKCC,SALD;;AAAA,qBAMYT,QAAQ,CAAC,SAAD,CANpB;AAAA;AAAA,QAMPU,KANO;AAAA,QAMAC,QANA,kBAQd;;;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,UAAU,GADE,CACC;AACd,GAFQ,EAEP,EAFO,CAAT,CATc,CAWR;;AAEN,QAAMA,UAAU,GAAG,YAAY;AAC7B;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,2CAAoCC,OAApC,qBAAsDX,MAAtD,sBAAwEC,OAAxE,EAA5B,CAF6B,CAG7B;;AACA,UAAMW,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAV,IAAAA,UAAU,CAACS,IAAI,CAACE,IAAN,CAAV;AACD,GAND;;AAQA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB;AACA;AACAX,IAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CAHwB,CAIxB;;AACAC,IAAAA,OAAO,CAACtB,GAAR,CAAYO,MAAZ;AACD,GAND;;AAQA,SACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,YAA7B;AAA0C,MAAA,KAAK,EAAEA,MAAjD;AAAyD,MAAA,QAAQ,EAAEW,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADF,EAQIb,OAAO,CAACkB,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,KAEV;AACA,wBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,MAAM,CAACA,MAAP,CAAcE,KAAzC;AAAgD,MAAA,QAAQ,EAAEF,MAAM,CAACA,MAAP,CAAcG,QAAxE;AAAkF,MAAA,KAAK,EAAEH,MAAM,CAACA,MAAP,CAAcI,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CARJ;AAFF;AAkBD,CA/CD;;AAiDA,eAAe1B,GAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport { log } from 'util';\nimport Recipe from './Components/Recipe'\n\nconst App = ()=>{\n  //? const variables for keys and api endpoint\n  const APP_ID = 'f3dd72ba'\n  const APP_KEY = '6d25956fcfb5c8062541bfba4e1a6e23'\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('chicken')\n\n  //* Use effect is a function which is run when the page is refreshed\n  useEffect(()=>{\n    getRecipes() //* Invoke the function for fethching our data\n  },[]) //? Run this function when the page is loaded for the first time only\n\n  const getRecipes = async () => {\n    //* Await the get request\n    const response = await fetch(`https://api.edamam.com/search?q=${chicken}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    //* Wait for the data to arraive and parse it\n    const data = await response.json()\n    setRecipes(data.hits)\n  };\n\n  const updateSearch = e => {\n    //* Events have a sender which references the element where the event occured, we can modify this sender object\n    //? Update our search variable by asigning it the value we are atempting to type in  \n    setSearch(e.target.value)\n    //? If we log our search we will see the string as we type it\n    console.log(search);\n  };\n\n  return(\n    //* Basic JSX which is exported into App.js\n    <div className=\"App\">\n      <form className=\"search-form\">\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n          <button type=\"submit\" className=\"search-buton\">\n            Submit\n          </button>  \n      </form>\n      {\n        recipes.map((recipe,index) =>\n          (\n          //? The recipe item, has a ricipe object which we want to access to\n          <Recipe key={index} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image}/>)\n          )\n      }\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}